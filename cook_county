import os
import pandas as pd
from concurrent.futures import ThreadPoolExecutor

def read_sheet(file_path, sheet_name):
    """Read a single sheet from an Excel file."""
    return sheet_name, pd.read_excel(file_path, sheet_name=sheet_name, header=None)

def read_excel_file(file_path):
    """Read all sheets from a single Excel file in parallel."""
    xls = pd.ExcelFile(file_path)
    with ThreadPoolExecutor() as executor:
        sheet_data = dict(executor.map(lambda sheet: read_sheet(file_path, sheet), xls.sheet_names))
    return os.path.basename(file_path), sheet_data

def read_excel_files(folder_path):
    """Read all Excel files in a folder in parallel."""
    excel_data = {}
    files = [os.path.join(folder_path, file) for file in os.listdir(folder_path) if file.endswith((".xls", ".xlsx"))]
    
    with ThreadPoolExecutor() as executor:
        results = executor.map(read_excel_file, files)
    
    for file_name, sheets in results:
        excel_data[file_name] = sheets
    
    return excel_data

excel_files_data = read_excel_files(folder_path_csv2)
print("Excel files read successfully.")
