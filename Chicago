def left_join_dataframes(df1, df2, on_columns):
    """
    Perform a left join on two DataFrames based on specified columns,
    but exclude NaN values from being considered matches.
    
    Parameters:
    df1 (pd.DataFrame): The main DataFrame.
    df2 (pd.DataFrame): The DataFrame to join.
    on_columns (list): List of columns to join on.
    
    Returns:
    pd.DataFrame: The merged DataFrame.
    """
    df1 = df1.copy()
    df2 = df2.copy()
    
    # Process GRD column strings
    if 'GRD' in on_columns:
        df1['GRD'] = df1['GRD'].str.upper().str.lstrip('0')
        df2['GRD'] = df2['GRD'].str.upper().str.lstrip('0')
    
    # Create a join key that excludes NaN matches
    for col in on_columns:
        # Create temporary columns for joining that mark NaN values distinctly
        df1[f'{col}_valid'] = df1[col].notna()
        df2[f'{col}_valid'] = df2[col].notna()
    
    # Add validation columns to the join criteria
    validation_cols = [f'{col}_valid' for col in on_columns]
    join_cols = on_columns + validation_cols
    
    # Perform the join
    merged_df = pd.merge(df1, df2, on=join_cols, how='left')
    
    # Clean up temporary columns
    for col in validation_cols:
        merged_df = merged_df.drop(columns=[col])
    
    return merged_df
