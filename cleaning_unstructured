import pandas as pd
import re
from datetime import datetime

def extract_rg_data(file_path, target_year=2023):
    # Read the Excel file - don't specify header since the format is irregular
    df_raw = pd.read_excel(file_path, header=None)
    
    # Get the title from the file or sheet
    title = None
    try:
        # Try to get filename as title if available
        title = file_path.split('/')[-1].replace('.xlsx', '').replace('.xls', '')
    except:
        # Use a default title if filename not available
        title = "RG Pay Structure"
    
    data = []
    date_pattern = re.compile(r'(\d{1,2}/\d{1,2}/\d{2,4})')
    
    # Scan through the dataframe to find dates and corresponding RG1/RG2 rows
    for i in range(df_raw.shape[0]):
        date_cell = str(df_raw.iloc[i, 0])
        date_match = date_pattern.search(date_cell)
        
        if date_match:
            date_str = date_match.group(1)
            try:
                # Parse the date to check if it's from target year
                date_obj = pd.to_datetime(date_str)
                
                # Only process rows with the target year (default 2023)
                if date_obj.year == target_year:
                    # Look for RG1 and RG2 in this row and subsequent row
                    for j in range(2):  # Check current row and next row
                        if i+j < df_raw.shape[0]:
                            grade_cell = str(df_raw.iloc[i+j, 1]).strip()
                            
                            if grade_cell in ['RG1', 'RG2']:
                                # Get hourly rate from the hourly column (assumed to be column 3)
                                hourly_str = str(df_raw.iloc[i+j, 3])
                                
                                # Remove any $ and convert to float
                                hourly_rate = float(hourly_str.replace('$', '').replace(',', ''))
                                
                                # Calculate annual rate
                                annual_rate = hourly_rate * 2080
                                
                                data.append({
                                    'grade': grade_cell,
                                    'term': 'annual',
                                    'end_rate': round(annual_rate, 2),
                                    'category': title
                                })
            except:
                # If date parsing fails, continue to next row
                continue
    
    return pd.DataFrame(data)

# Example usage
if __name__ == "__main__":
    file_path = "path_to_your_rg_excel_file.xlsx"  # Replace with actual file path
    result_df = extract_rg_data(file_path)
    print(result_df)
